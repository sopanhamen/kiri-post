name: Node CI

#event 
on: 
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]
jobs: 
  build: 
    runs-on: ubuntu-latest

    strategy: 
      matrix: 
        node-version: [12.x , 14.x, 16.x]
    #steps:
    # simple config
    #- uses: actions/checkout@v1
    #- name: Use Node.js ${{matrix.node-version}}
    #  uses: actions/setup-node@v1
    #  with: 
    #    node_version: ${{matrix.node-version}}
    #- name: yarn , build and test
    #  run: 
    #    yarn 
    #    yarn build --if-present
    #  env: 
    #   CI: true

  
    # config workflow with dockerImage
    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  # config credential server
  # deploy: 
  #   .deploy: &deploy
  # stage: deploy
  # image: google/cloud-sdk
  # services:
  #   - docker:dind
  # script:
  #   - chmod +x ./dotenv.sh
  #   - chmod +x ./languages.sh
  #   - ./dotenv.sh
  #   - ./languages.sh
  #   - echo $GCP_SERVICE_KEY > gcloud-service-key.json # Google Cloud service accounts
  #   - gcloud auth activate-service-account --key-file gcloud-service-key.json
  #   - gcloud config set project $GCP_PROJECT_ID
  #   - sed -i "s,SERVICE_NAME,"$SERVICE_NAME",g" cloudbuild.yml
  #   - gcloud builds submit . --config=cloudbuild.yml --timeout=2700s
